[package]
name = "bilge"
version = "0.1.0"
authors = ["Hecatia Elegua"]
categories = ["data-structures", "no-std::no-alloc", "embedded", "rust-patterns"]
description = "Use bitsized types as if they were a feature of rust."
documentation = "https://docs.rs/bilge"
edition = "2021"
keywords   = ["bilge", "bitfield", "bits", "register"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/hecatia-elegua/bilge"

# skipping this for now
# [features]
# default = []
# nightly = []

[dependencies]
# waiting for upstream
arbitrary-int = { git = "https://github.com/hecatia-elegua/arbitrary-int", branch = "const_trait_impl", features = ["nightly"] }
bilge-impl = { path = "bilge-impl", version = "=0.1.0" }

[dev-dependencies]
trybuild = "1.0"
# examples
volatile = { git = "https://github.com/theseus-os/volatile" }
zerocopy = "0.5.0"
# benches
criterion = "0.3"
modular-bitfield = "0.11.2"
bitbybit = "1.1.4"
deku = "0.16"

# criterion workaround to make `cargo bench -- --verbose` work
[lib]
bench = false

[[bench]]
name = "compared"
harness = false

[workspace]
members = [
    "bilge-impl"
]
