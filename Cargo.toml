[package]
name = "bilge"
authors = ["Hecatia Elegua"]
version.workspace = true
description.workspace = true
documentation.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
include = ["src/lib.rs", "LICENSE-*", "README.md"]

[workspace]
members = ["bilge-impl"]

[workspace.package]
version = "0.3.0"
categories = ["data-structures", "no-std::no-alloc", "embedded", "rust-patterns"]
description = "Use bitsized types as if they were a feature of rust."
documentation = "https://docs.rs/bilge"
edition = "2021"
keywords   = ["bilge", "bitfield", "bits", "register"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/hecatia-elegua/bilge"
# tested with `cargo msrv`:
# 1.64 without let...else
# 1.34 without cargo workspace-inheritance
# 1.78 mutable references are not allowed in constant functions, etc. in arbitrary-int 2.0.0
rust-version = "1.83"

[features]
# at bilge devs: easiest way to test nightly is by switching the
# channel in `rust-toolchain.toml` and switching to nightly here,
# but it might not work anymore. I would rather want to wait for
# upstream rust nightly to support the const trait featureset again.
# The code still contains conditional `const` keywords for later.
# default = ["nightly"]
default = []
# Enables constness on nightly; FIXME: re-enable when const convert and const trait impl are back on nightly
# nightly = ["arbitrary-int/const_convert_and_const_trait_impl", "bilge-impl/nightly"]
serde = ["bilge-impl/serde", "arbitrary-int/serde"]

[dependencies]
# cargo clippy workaround, we can't add `path = "../arbitrary-int"` as well
arbitrary-int = "2.0.0"
bilge-impl = { version = "=0.3.0", path = "bilge-impl" }

[dev-dependencies]
# tests
rustversion = "1.0"
trybuild = "1.0"
custom_bits = { path = "tests/custom_bits" }
assert_matches = "1.5.0"
serde = "1.0"
serde_test = "1.0"

# examples
# volatile = { git = "https://github.com/theseus-os/volatile" }
volatile = "0.5.1"
zerocopy = "0.5.0"

# benches - commented out due to build times, also nightly-only
# criterion = "0.3"
# modular-bitfield = "0.11.2"
# bitbybit = "1.1.4"
# TODO: test again, might inline/const more things now:
# deku = "0.16"

# criterion workaround to make `cargo bench -- --verbose` work
[lib]
bench = false

[[bench]]
name = "compared"
# cargo publish workaround "can't find `compared` bench at ... `benches\compared\main.rs`"
path = "benches/compared/main.rs"
harness = false
# REMOVE this when benchmarking
bench = false

[workspace.lints.rust]
unexpected_cfgs = "allow"
[lints.rust]
unexpected_cfgs = "allow"
